# ASTRAL_CORE 2.0 - Security-Hardened Nginx Configuration
# Production-ready reverse proxy with SSL, security headers, and rate limiting

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security and performance optimizations
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Security headers
    server_tokens off;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting for crisis protection with enhanced zones
    limit_req_zone $binary_remote_addr zone=crisis_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=60r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # ========================================================================
    # CRISIS INTERVENTION PLATFORM - Main Application
    # ========================================================================
    upstream astral_web {
        server astral-web:3000;
        keepalive 32;
    }

    # ========================================================================
    # ADMIN DASHBOARD
    # ========================================================================
    upstream astral_admin {
        server astral-admin:3002;
        keepalive 16;
    }

    # ========================================================================
    # MAIN SITE - HTTPS
    # ========================================================================
    server {
        listen 443 ssl http2;
        server_name astralcore.org www.astralcore.org;

        ssl_certificate /etc/ssl/certs/astralcore.org.crt;
        ssl_certificate_key /etc/ssl/certs/astralcore.org.key;
        
        # Connection limiting per IP
        limit_conn conn_limit_per_ip 20;

        # Crisis-specific CSP (Content Security Policy)
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; frame-ancestors 'none';" always;

        # Crisis endpoint - highest priority, no rate limiting
        location /api/crisis {
            proxy_pass http://astral_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for crisis chat
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # No timeout for crisis connections
            proxy_read_timeout 24h;
            proxy_send_timeout 24h;
        }

        # Emergency endpoints - minimal rate limiting
        location /api/emergency {
            limit_req zone=crisis_limit burst=20 nodelay;
            
            proxy_pass http://astral_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Authentication endpoints - stricter rate limiting
        location /api/auth/ {
            limit_req zone=auth_limit burst=3 nodelay;
            
            proxy_pass http://astral_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API endpoints - standard rate limiting
        location /api/ {
            limit_req zone=api_limit burst=50 nodelay;
            
            proxy_pass http://astral_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static assets - aggressive caching
        location /static/ {
            proxy_pass http://astral_web;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Next.js assets
        location /_next/static/ {
            proxy_pass http://astral_web;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Main application
        location / {
            limit_req zone=general_limit burst=100 nodelay;
            
            proxy_pass http://astral_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Next.js optimization
            proxy_buffering off;
        }
    }

    # ========================================================================
    # ADMIN DASHBOARD - HTTPS with IP restrictions
    # ========================================================================
    server {
        listen 443 ssl http2;
        server_name admin.astralcore.org;

        ssl_certificate /etc/ssl/certs/admin.astralcore.org.crt;
        ssl_certificate_key /etc/ssl/certs/admin.astralcore.org.key;

        # Restrict admin access to specific IP ranges (configure as needed)
        # allow 10.0.0.0/8;
        # allow 172.16.0.0/12;
        # allow 192.168.0.0/16;
        # deny all;

        # Stricter CSP for admin
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self'; frame-ancestors 'none';" always;

        location / {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://astral_admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # ========================================================================
    # HTTP to HTTPS redirect
    # ========================================================================
    server {
        listen 80;
        server_name astralcore.org www.astralcore.org admin.astralcore.org;
        return 301 https://$server_name$request_uri;
    }

    # ========================================================================
    # Health check and monitoring endpoint (HTTP only, internal)
    # ========================================================================
    server {
        listen 80;
        server_name localhost;
        
        # Allow only internal network access
        allow 172.20.0.0/16;
        allow 127.0.0.1;
        deny all;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /nginx_status {
            stub_status on;
            access_log off;
        }
        
        location /metrics {
            access_log off;
            return 200 "nginx_up 1\n";
            add_header Content-Type text/plain;
        }
    }
}